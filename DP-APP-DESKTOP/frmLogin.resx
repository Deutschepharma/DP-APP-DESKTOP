<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>